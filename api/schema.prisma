// database
datasource db {
  provider = "sqlite"
  url      = "file:database.db"
}

// generator
generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

// data models
model Home {
  id                Int     @id @default(autoincrement())
  address           String
  constructionType  String
  homeYear          Int
  heatingSetpoint   Int
  coolingSetpoint   Int
  homeArea          Int
  ceilingHeight     Int
  stories           Int
  owner             User    @relation(fields: [ownerId], references: [id])
  ownerId           Int     @unique
}

model User {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  name          String?
  utility       String  @default("speculoos_power")
  street        String
  city          String
  state         String
  zip           Int
  home          Home?
  dryers        Dryer[]
  washers       Washer[]
  dishwashers   Dishwasher[]
  hvac          Hvac[]
  phone         BigInt
  energy        UserEnergy[]
  gas           UserGas[]
  water         UserWater[]
}

model Hvac {
  id                Int     @id @default(autoincrement())
  applianceType     String
  applianceModelId  String
  energy            HvacEnergy[]
  gas               HvacGas[]
  water             HvacWater[]
  owner             User    @relation(fields: [ownerId], references: [id])
  ownerId           Int     @unique
}

model Dryer {
  id                Int     @id @default(autoincrement())
  applianceType     String
  applianceModelId  String
  energy            DryerEnergy[]
  gas               DryerGas[]
  owner             User    @relation(fields: [ownerId], references: [id])
  ownerId           Int     @unique
}

model Washer {
  id                Int     @id @default(autoincrement())
  applianceType     String
  applianceModelId  String
  energy            WasherEnergy[]
  gas               WasherGas[]
  water             WasherWater[]
  owner             User    @relation(fields: [ownerId], references: [id])
  ownerId           Int     @unique
}

model Dishwasher {
  id                Int     @id @default(autoincrement())
  applianceType     String
  applianceModelId  String
  energy            DishwasherEnergy[]
  gas               DishwasherGas[]
  water             DishwasherWater[]
  owner             User    @relation(fields: [ownerId], references: [id])
  ownerId           Int     @unique
}

model UserEnergy {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  energy    Float
  cost      Float?
  owner     User    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}

model UserGas {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     User    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}

model UserWater {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     User    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}

model HvacEnergy {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  energy    Float
  cost      Float?
  owner     Hvac    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}

model HvacGas {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     Hvac    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}

model HvacWater {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     Hvac    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}
model DryerEnergy {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  energy    Float
  cost      Float?
  owner     Dryer    @relation(fields: [ownerId], references: [id])
  ownerId   Int     @unique
}

model DryerGas {
  id            Int         @id @default(autoincrement())
  dateStart     DateTime
  dateEnd       DateTime
  dateName      String
  gas           Float
  cost          Float?
  owner         Dryer    @relation(fields: [ownerId], references: [id])
  ownerId       Int     @unique
}

model WasherEnergy {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  energy    Float
  cost      Float?
  owner     Washer      @relation(fields: [ownerId], references: [id])
  ownerId   Int         @unique
}

model WasherGas {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     Washer      @relation(fields: [ownerId], references: [id])
  ownerId   Int         @unique
}

model WasherWater {
  id        Int         @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     Washer      @relation(fields: [ownerId], references: [id])
  ownerId   Int         @unique
}

model DishwasherEnergy {
  id        Int             @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  energy    Float
  cost      Float?
  owner     Dishwasher      @relation(fields: [ownerId], references: [id])
  ownerId   Int             @unique
}

model DishwasherGas {
  id        Int             @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     Dishwasher      @relation(fields: [ownerId], references: [id])
  ownerId   Int             @unique
}

model DishwasherWater {
  id        Int             @id @default(autoincrement())
  dateStart DateTime
  dateEnd   DateTime
  dateName  String
  gas       Float
  cost      Float?
  owner     Dishwasher      @relation(fields: [ownerId], references: [id])
  ownerId   Int             @unique
}
